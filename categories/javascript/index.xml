<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascript on Teopeurt&#39;s Blog</title>
    <link>http://blog.teopeurt.com/categories/javascript/</link>
    <description>Recent content in Javascript on Teopeurt&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 24 Feb 2016 20:54:40 +0100</lastBuildDate>
    <atom:link href="http://blog.teopeurt.com/categories/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Angular by example</title>
      <link>http://blog.teopeurt.com/post/angular-by-example/</link>
      <pubDate>Wed, 24 Feb 2016 20:54:40 +0100</pubDate>
      
      <guid>http://blog.teopeurt.com/post/angular-by-example/</guid>
      <description>

&lt;h1 id=&#34;environment-setup:33e68cecf32be79d1a30ee91889a835d&#34;&gt;Environment Setup&lt;/h1&gt;

&lt;p&gt;Use NVM
Use Node js&lt;/p&gt;

&lt;h2 id=&#34;scaffold-a-webapp-with-yeoman:33e68cecf32be79d1a30ee91889a835d&#34;&gt;Scaffold a WebApp with YeoMan&lt;/h2&gt;

&lt;p&gt;source &lt;a href=&#34;http://yeoman.io/codelab/&#34;&gt;YeoMan Guide&lt;/a&gt; and &lt;a href=&#34;http://yeoman.io/codelab/meet-yeoman.html&#34;&gt;Meet Yeoman&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Install yo, grunt-cli, bower, generator-angular and generator-karma&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install -g grunt-cli bower yo generator-karma generator-angular
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I am opinionated in how I use Ruby in my system. I use &lt;a href=&#34;https://github.com/rbenv/rbenv#installation&#34;&gt;rbenv&lt;/a&gt; and &lt;a href=&#34;https://github.com/rbenv/ruby-build#readme&#34;&gt;ruby-build&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Install the compass gem:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;gem install compass
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Either clone my github page or if you really want to learn, do it from scratch.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir my-angular-project &amp;amp;&amp;amp; cd $_
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Run &lt;code&gt;yo angular&lt;/code&gt; , optionally passing in an app name:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;yo angular [app-name]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Go through the options&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1. Choose Grunt
2. Use Sass
3. Include Bootstrap
4. Use Sass version of Bootstrap
5. Choose Angular modules needed
6. Profit
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now run the initial app with &lt;code&gt;grunt serve&lt;/code&gt; .&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;grunt serve
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This should automatically open a browser window&lt;/p&gt;

&lt;p&gt;I always use source control&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git init
git add .
git commit -am &amp;quot;initial project commit&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now lets do some actual work..&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&#34;basic-project:33e68cecf32be79d1a30ee91889a835d&#34;&gt;Basic Project&lt;/h1&gt;

&lt;p&gt;Open &lt;code&gt;app/index.html&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;&amp;lt;!doctype html&amp;gt;
&amp;lt;html&amp;gt;
  &amp;lt;head&amp;gt;
.
.
.
  &amp;lt;/head&amp;gt;
  &amp;lt;body ng-app=&amp;quot;myAngularProjectApp&amp;quot;&amp;gt;
.
.
.

    &amp;lt;div class=&amp;quot;container&amp;quot;&amp;gt;
    &amp;lt;div ng-view=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
.
.
.
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

&lt;/code&gt;&lt;/pre&gt;

&lt;ul&gt;
&lt;li&gt;what does [ng-app]() do, is it an angular or custom directive?&lt;/li&gt;
&lt;li&gt;what does [ng-view]() do, is it an angular or custom directive?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;open &lt;code&gt;app/script.js&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;&#39;use strict&#39;;

/**
 * @ngdoc overview
 * @name myAngularProjectApp
 * @description
 * # myAngularProjectApp
 *
 * Main module of the application.
 */
angular
  .module(&#39;myAngularProjectApp&#39;, [
    &#39;ngAnimate&#39;,
    &#39;ngAria&#39;,
    &#39;ngCookies&#39;,
    &#39;ngMessages&#39;,
    &#39;ngResource&#39;,
    &#39;ngRoute&#39;,
    &#39;ngSanitize&#39;,
    &#39;ngTouch&#39;
  ])
  .config(function ($routeProvider) {
    $routeProvider
      .when(&#39;/&#39;, {
        templateUrl: &#39;views/main.html&#39;,
        controller: &#39;MainCtrl&#39;,
        controllerAs: &#39;main&#39;
      })
      .when(&#39;/about&#39;, {
        templateUrl: &#39;views/about.html&#39;,
        controller: &#39;AboutCtrl&#39;,
        controllerAs: &#39;about&#39;
      })
      .otherwise({
        redirectTo: &#39;/&#39;
      });
  });
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;we can see [$routeprovider]() function - what does it do?&lt;/p&gt;

&lt;p&gt;Ahh - welcome back, so basically read &lt;code&gt;when&lt;/code&gt; in the &lt;code&gt;root&lt;/code&gt; url &lt;code&gt;&#39;/&#39;&lt;/code&gt;, render &lt;code&gt;views/main.html&lt;/code&gt;, derived from &lt;code&gt;templateUrl&lt;/code&gt;, define controller and aliases.&lt;/p&gt;

&lt;p&gt;Brilliant, thus let&amp;rsquo;s see this beauty in action.&lt;/p&gt;

&lt;p&gt;Open &lt;code&gt;app/views/main.html&lt;/code&gt; and replace with this&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;    &amp;lt;div class=&amp;quot;jumbotron&amp;quot;&amp;gt;
      &amp;lt;h1&amp;gt;Bitcoin Investment&amp;lt;br&amp;gt;Calculator&amp;lt;/h1&amp;gt;
      &amp;lt;br&amp;gt;
      &amp;lt;h3&amp;gt;How many Bitcoins do you have?&amp;lt;/h3&amp;gt;
      &amp;lt;!-- model --&amp;gt;
      &amp;lt;input type=&amp;quot;number&amp;quot; ng-model=&amp;quot;somenumber&amp;quot; placeholder=&amp;quot;20&amp;quot;&amp;gt;
      &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
      &amp;lt;h4&amp;gt;You have &amp;lt;span class=&amp;quot;number&amp;quot;&amp;gt;{{ somenumber }}&amp;lt;/span&amp;gt; Bitcoins - nice!&amp;lt;/h4&amp;gt;
    &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Lets look at the diff&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt; &amp;lt;div class=&amp;quot;jumbotron&amp;quot;&amp;gt;
-  &amp;lt;h1&amp;gt;&#39;Allo, &#39;Allo!&amp;lt;/h1&amp;gt;
-  &amp;lt;p class=&amp;quot;lead&amp;quot;&amp;gt;
-    &amp;lt;img src=&amp;quot;images/yeoman.png&amp;quot; alt=&amp;quot;I&#39;m Yeoman&amp;quot;&amp;gt;&amp;lt;br&amp;gt;
-    Always a pleasure scaffolding your apps.
-  &amp;lt;/p&amp;gt;
-  &amp;lt;p&amp;gt;&amp;lt;a class=&amp;quot;btn btn-lg btn-success&amp;quot; ng-href=&amp;quot;#/&amp;quot;&amp;gt;Splendid!&amp;lt;span class=&amp;quot;glyphicon glyphicon-ok&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/a&amp;gt;&amp;lt;/p&amp;gt;
-&amp;lt;/div&amp;gt;
-
-&amp;lt;div class=&amp;quot;row marketing&amp;quot;&amp;gt;
-  &amp;lt;h4&amp;gt;HTML5 Boilerplate&amp;lt;/h4&amp;gt;
-  &amp;lt;p&amp;gt;
-    HTML5 Boilerplate is a professional front-end template for building fast, robust, and adaptable web apps or sites.
-  &amp;lt;/p&amp;gt;
-
-  &amp;lt;h4&amp;gt;Angular&amp;lt;/h4&amp;gt;
-  &amp;lt;p&amp;gt;
-    AngularJS is a toolset for building the framework most suited to your application development.
-  &amp;lt;/p&amp;gt;
-
-  &amp;lt;h4&amp;gt;Karma&amp;lt;/h4&amp;gt;
-  &amp;lt;p&amp;gt;Spectacular Test Runner for JavaScript.&amp;lt;/p&amp;gt;
+      &amp;lt;h1&amp;gt;Bitcoin Investment&amp;lt;br&amp;gt;Calculator&amp;lt;/h1&amp;gt;
+      &amp;lt;br&amp;gt;
+      &amp;lt;h3&amp;gt;How many Bitcoins do you have?&amp;lt;/h3&amp;gt;
+      &amp;lt;!-- model --&amp;gt;
+      &amp;lt;input type=&amp;quot;number&amp;quot; ng-model=&amp;quot;somenumber&amp;quot; placeholder=&amp;quot;20&amp;quot;&amp;gt;
+      &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
+      &amp;lt;h4&amp;gt;You have &amp;lt;span class=&amp;quot;number&amp;quot;&amp;gt;{{ somenumber }}&amp;lt;/span&amp;gt; Bitcoins - nice!&amp;lt;/h4&amp;gt;
 &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;-Defining a model
Here we are defining the [ng-model]() in the input box as the &lt;code&gt;ng-model=&amp;quot;someumber&amp;quot;&lt;/code&gt;. By doing so, we have bound the value within the input box to the model, so when the input value changes, Angular automatically updates the model. This is [two-way-binding]() in action.&lt;/p&gt;

&lt;p&gt;-Using a model
We wrap the model value, &lt;code&gt;somenumber&lt;/code&gt; in double curly braces, this is an example of Angular service component [interpolate]() The double curly brace notation {{ }} to bind expressions to elements is built-in Angular markup&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://code.angularjs.org/1.5.0/docs/api/ng/provider/SinterpolateProvider&#34;&gt;source&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;module-and-controllers:33e68cecf32be79d1a30ee91889a835d&#34;&gt;Module and Controllers&lt;/h2&gt;

&lt;h3 id=&#34;controllers:33e68cecf32be79d1a30ee91889a835d&#34;&gt;Controllers&lt;/h3&gt;

&lt;p&gt;Controllers are &amp;lsquo;classes or &amp;lsquo;constructor functions&amp;rsquo;&lt;/p&gt;

&lt;p&gt;Going back to &lt;code&gt;app/scripts/app/js&lt;/code&gt; note this&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;.when(&#39;/&#39;, {
        templateUrl: &#39;views/main.html&#39;,
        controller: &#39;MainCtrl&#39;,
        controllerAs: &#39;main&#39;
      })
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;note that for the &lt;code&gt;main.html&lt;/code&gt; a controller is defined &lt;code&gt;MainCtrl&lt;/code&gt;. This has already been generated by yeoman - so go ahead and open &lt;code&gt;app/scripts/controllers/main.js&lt;/code&gt;.
Is there anything special about the name? How did we get to inject this into our app?&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-html&#34;&gt;        &amp;lt;script src=&amp;quot;scripts/app.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
        &amp;lt;script src=&amp;quot;scripts/controllers/main.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
        &amp;lt;script src=&amp;quot;scripts/controllers/about.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So the name we created.. whats important is the content..&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;angular.module(&#39;myAngularProjectApp&#39;)
  .controller(&#39;MainCtrl&#39;, function () {
    this.awesomeThings = [
      &#39;HTML5 Boilerplate&#39;,
      &#39;AngularJS&#39;,
      &#39;Karma&#39;
    ];
  });
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We define a controller constructor function &lt;code&gt;MainCtrl&lt;/code&gt; within our module &lt;code&gt;myAngularProjectApp&lt;/code&gt; . Note that we have actually created a directive in our App.js when we defined a templateUrl and controller, this is a major source of confusion with Angular js beginners as there a more than one of &lt;code&gt;doing things&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;We could easily have defined our controller within our index.html&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;html ng-app=&amp;quot;myAngularProjectApp&amp;quot; ng-controller=&amp;quot;MainCtrl&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;But this is inextensible and makes it difficult to extend our app.&lt;/p&gt;

&lt;p&gt;Replace mainjs with this&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;angular.module(&#39;myAngularProjectApp&#39;)
  .controller(&#39;MainCtrl&#39;, [&#39;$scope&#39;, function ($scope) {
       // attaching 0 to the DOM
      $scope.somenumber = 320;
  }]);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You should have Grunt running to detect changes so once saved, the screen should refresh and update.
Notice the usage of $scope, Angular uses a lot of DI Dependency Injection &lt;a href=&#34;https://docs.angularjs.org/guide/di&#34;&gt;DI&lt;/a&gt;, it generally takes this shape for controllers:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;someModule.controller(&#39;MyController&#39;, [&#39;$scope&#39;, &#39;dep1&#39;, &#39;dep2&#39;, function($scope, dep1, dep2) {
  ...
  $scope.aMethod = function() {
    ...
  }
  ...
}]);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Go read more on &lt;a href=&#34;https://docs.angularjs.org/guide/scope&#34;&gt;scopes&lt;/a&gt;. Controllers are always generally associated with an element in the DOM (the V and C in MVC) and are thus provided with a scope.&lt;/p&gt;

&lt;h3 id=&#34;changes:33e68cecf32be79d1a30ee91889a835d&#34;&gt;Changes&lt;/h3&gt;

&lt;p&gt;app/scripts/controllers/main.js&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;@@ -8,7 +8,19 @@
  * Controller of the myAngularProjectApp
  */
 angular.module(&#39;myAngularProjectApp&#39;)
-  .controller(&#39;MainCtrl&#39;, [&#39;$scope&#39;, function ($scope) {
-       // attaching 0 to the DOM
-      $scope.somenumber = 320;
-  }]);
+  .controller(&#39;MainCtrl&#39;, function ($scope, $http) {
+          
+     // calling the api, grabbing the value for USD, appending it to the dom
+     $http.get(&amp;quot;https://bitpay.com/api/rates&amp;quot;)
+          .success(function(data){
+            $scope.rates = data;
+            for(var i=0;i&amp;lt;data.length;i++){
+              if (data[i].code == &amp;quot;USD&amp;quot;){
+                $scope.currRate = data[i].rate;
+              }
+            }
+            $scope.initalAmt  = 5000;
+            $scope.newAmt     = function(price){return price/$scope.currRate * $scope.initalAmt;}
+            $scope.profit     = function(price){return price/$scope.currRate * $scope.initalAmt - $scope.initalAmt;}
+      });      
+  });
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Looking at app/views/main.html&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-diff&#34;&gt;@@ -1,9 +1,58 @@
 &amp;lt;div class=&amp;quot;jumbotron&amp;quot;&amp;gt;
-      &amp;lt;h1&amp;gt;Bitcoin Investment&amp;lt;br&amp;gt;Calculator&amp;lt;/h1&amp;gt;
-      &amp;lt;br&amp;gt;
-      &amp;lt;h3&amp;gt;How many Bitcoins do you have?&amp;lt;/h3&amp;gt;
-      &amp;lt;!-- model --&amp;gt;
-      &amp;lt;input type=&amp;quot;number&amp;quot; ng-model=&amp;quot;somenumber&amp;quot; placeholder=&amp;quot;20&amp;quot;&amp;gt;
-      &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
-      &amp;lt;h4&amp;gt;You have &amp;lt;span class=&amp;quot;number&amp;quot;&amp;gt;{{ somenumber }}&amp;lt;/span&amp;gt; Bitcoins - nice!&amp;lt;/h4&amp;gt;
+
+      &amp;lt;div class=&amp;quot;row&amp;quot;&amp;gt;
+        &amp;lt;div class=&amp;quot;col-sm-12&amp;quot;&amp;gt;
+          &amp;lt;h1&amp;gt;Bitcoin Investment Calculator&amp;lt;/h1&amp;gt;
+          &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
+          &amp;lt;form role=&amp;quot;form&amp;quot;&amp;gt;
+            &amp;lt;label for=&amp;quot;starting-investment&amp;quot;&amp;gt;Initial Investment (USD)&amp;lt;/label&amp;gt;
+            &amp;lt;input type=&amp;quot;number&amp;quot; ng-model=&amp;quot;initalAmt&amp;quot; class=&amp;quot;form-control&amp;quot; placeholder=&amp;quot;{{initalAmt}}&amp;quot;&amp;gt;
+          &amp;lt;/form&amp;gt;
+          &amp;lt;br&amp;gt;
+          &amp;lt;p&amp;gt;Current Price (USD): &amp;lt;span class=&amp;quot;number&amp;quot;&amp;gt;{{currRate | currency }}&amp;lt;/span&amp;gt;&amp;lt;/p&amp;gt;
+        &amp;lt;/div&amp;gt;
+      &amp;lt;/div&amp;gt;
+      &amp;lt;div class=&amp;quot;row&amp;quot;&amp;gt;
+        &amp;lt;div class=&amp;quot;col-sm-12&amp;quot;&amp;gt;
+          &amp;lt;br&amp;gt;&amp;lt;br&amp;gt;
+          &amp;lt;table class=&amp;quot;table table-bordered&amp;quot;&amp;gt;
+            &amp;lt;thead&amp;gt;
+              &amp;lt;tr&amp;gt;
+                &amp;lt;th&amp;gt;Price of 1 BTC&amp;lt;/th&amp;gt;
+                &amp;lt;th&amp;gt;Starting Investment&amp;lt;/th&amp;gt;
+                &amp;lt;th&amp;gt;Profit&amp;lt;/th&amp;gt;
+              &amp;lt;/tr&amp;gt;
+            &amp;lt;/thead&amp;gt;
+              &amp;lt;tbody&amp;gt;
+                &amp;lt;tr&amp;gt;
+                  &amp;lt;td&amp;gt;$1,000&amp;lt;/td&amp;gt;
+                  &amp;lt;td&amp;gt;{{ newAmt(1000) | currency }}&amp;lt;/td&amp;gt;
+                  &amp;lt;td&amp;gt;{{ profit(1000) | currency }}&amp;lt;/td&amp;gt;
+                &amp;lt;/tr&amp;gt;
+                &amp;lt;tr&amp;gt;
+                  &amp;lt;td&amp;gt;$5,000&amp;lt;/td&amp;gt;
+                  &amp;lt;td&amp;gt;{{ newAmt(5000) | currency }}&amp;lt;/td&amp;gt;
+                  &amp;lt;td&amp;gt;{{ profit(5000) | currency }}&amp;lt;/td&amp;gt;
+                &amp;lt;/tr&amp;gt;
+                &amp;lt;tr&amp;gt;
+                  &amp;lt;td&amp;gt;$10,000&amp;lt;/td&amp;gt;
+                  &amp;lt;td&amp;gt;{{ newAmt(10000) | currency }}&amp;lt;/td&amp;gt;
+                  &amp;lt;td&amp;gt;{{ profit(10000) | currency }}&amp;lt;/td&amp;gt;
+                &amp;lt;/tr&amp;gt;
+                &amp;lt;tr&amp;gt;
+                  &amp;lt;td&amp;gt;$25,000&amp;lt;/td&amp;gt;
+                  &amp;lt;td&amp;gt;{{ newAmt(25000) | currency }}&amp;lt;/td&amp;gt;
+                  &amp;lt;td&amp;gt;{{ profit(25000) | currency }}&amp;lt;/td&amp;gt;
+                &amp;lt;/tr&amp;gt;
+                &amp;lt;tr&amp;gt;
+                  &amp;lt;td&amp;gt;$50,000&amp;lt;/td&amp;gt;
+                  &amp;lt;td&amp;gt;{{ newAmt(50000) | currency }}&amp;lt;/td&amp;gt;
+                  &amp;lt;td&amp;gt;{{ profit(50000) | currency }}&amp;lt;/td&amp;gt;
+                &amp;lt;/tr&amp;gt;
+              &amp;lt;/tbody&amp;gt;
+          &amp;lt;/table&amp;gt;
+          &amp;lt;span&amp;gt;* IF the price of 1 Bitcoin reaches X, THEN your starting investment becomes X AND your profit becomes X.&amp;lt;/span&amp;gt;
+        &amp;lt;/div&amp;gt;
+      &amp;lt;/div&amp;gt;
+
 &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;Written with &lt;a href=&#34;https://stackedit.io/&#34;&gt;Love&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
  </channel>
</rss>